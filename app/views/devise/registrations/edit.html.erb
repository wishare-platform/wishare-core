<style>
  /* Accordion animation styles */
  .section-content {
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    overflow: hidden;
  }

  .section-content.collapsed {
    max-height: 0;
    opacity: 0;
    padding-top: 0;
    padding-bottom: 0;
  }

  .section-content.expanded {
    max-height: 2000px; /* Large enough for any content */
    opacity: 1;
  }

  .section-icon {
    transition: transform 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  }

  /* Smooth hover effects */
  .section-button:hover {
    background-color: rgba(0, 0, 0, 0.02);
  }

  .dark .section-button:hover {
    background-color: rgba(255, 255, 255, 0.05);
  }
</style>

<div class="min-h-screen bg-gradient-to-br from-rose-50 via-amber-50 to-purple-50 dark:from-gray-950 dark:via-gray-900 dark:to-gray-950">

  <!-- Cover Image Section -->
  <div class="relative">
    <!-- Cover Image -->
    <div class="h-48 md:h-64 relative <% if current_user.cover_image.attached? %>bg-gray-800<% else %>bg-gradient-to-r from-rose-400 via-purple-500 to-indigo-500<% end %>">
      <% if current_user.cover_image.attached? %>
        <img src="<%= url_for(current_user.cover_image.variant(:large)) %>"
             alt="Cover image"
             class="absolute inset-0 w-full h-full object-cover">
      <% end %>
      <!-- Optional: Add pattern overlay -->
      <div class="absolute inset-0 bg-black/20"></div>

      <!-- Back Button -->
      <%= link_to wishlists_path, class: "absolute top-4 left-4 p-2 bg-white/20 backdrop-blur-md rounded-lg text-white hover:bg-white/30 transition flex items-center gap-2" do %>
        <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
        </svg>
        <span class="hidden sm:inline"><%= t('common.actions.back_to_homepage', default: 'Back to Homepage') %></span>
      <% end %>

      <!-- Edit Cover Button -->
      <button class="absolute bottom-4 right-4 px-4 py-2 bg-white/20 backdrop-blur-md rounded-lg text-white hover:bg-white/30 transition flex items-center gap-2 text-sm"
              data-controller="cover-image-upload"
              data-action="click->cover-image-upload#openCamera">
        <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 9a2 2 0 012-2h.93a2 2 0 001.664-.89l.812-1.22A2 2 0 0110.07 4h3.86a2 2 0 011.664.89l.812 1.22A2 2 0 0018.07 7H19a2 2 0 012 2v9a2 2 0 01-2 2H5a2 2 0 01-2-2V9z"></path>
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 13a3 3 0 11-6 0 3 3 0 016 0z"></path>
        </svg>
        <%= t('profile.edit.edit_cover', default: 'Edit Cover') %>
      </button>
    </div>
  </div>

  <!-- Profile Completeness Bar -->
  <div class="max-w-4xl mx-auto px-4 -mt-20 relative z-10">
    <div class="bg-white/90 dark:bg-gray-800/90 backdrop-blur-sm rounded-2xl p-4 mb-4 shadow-sm border border-rose-100 dark:border-gray-700">
      <%
        # Calculate profile completion
        completed_fields = 0
        total_fields = 8 # name, email, birthday, address, bio, social (any), gender, website
        completed_fields += 1 if resource.name.present?
        completed_fields += 1 if resource.email.present?
        completed_fields += 1 if resource.date_of_birth.present?
        completed_fields += 1 if resource.street_address.present? || resource.city.present?
        completed_fields += 1 if resource.bio.present?
        completed_fields += 1 if resource.instagram_username.present? || resource.twitter_username.present? || resource.tiktok_username.present?
        completed_fields += 1 if resource.gender.present? && resource.gender != 'not_specified'
        completed_fields += 1 if resource.website.present?
        completion_percentage = (completed_fields.to_f / total_fields * 100).round
      %>
      <div class="flex items-center justify-between mb-2">
        <span class="text-sm font-medium text-gray-700 dark:text-gray-300"><%= t('profile.edit.profile_strength', default: 'Profile Strength') %></span>
        <span class="text-sm text-gray-600 dark:text-gray-400"><%= t('profile.edit.complete_percentage', default: '%{percentage}% Complete', percentage: completion_percentage) %></span>
      </div>
      <div class="w-full bg-gray-200 dark:bg-gray-700 rounded-full h-2 mb-2">
        <div class="bg-gradient-to-r from-rose-500 to-purple-600 h-2 rounded-full transition-all duration-300" style="width: <%= completion_percentage %>%"></div>
      </div>
      <% if completion_percentage < 100 %>
        <p class="text-xs text-gray-600 dark:text-gray-400">
          <%= t('profile.edit.complete_profile_hint', default: 'Complete your profile to help friends find the perfect gifts') %> •
          <button type="button" onclick="expandAllSections()" class="text-rose-600 dark:text-rose-400 hover:underline"><%= t('profile.edit.complete_profile', default: 'Complete Profile') %></button>
        </p>
      <% else %>
        <p class="text-xs text-green-600 dark:text-green-400">
          ✨ <%= t('profile.edit.profile_complete', default: 'Your profile is complete!') %>
        </p>
      <% end %>
    </div>
  </div>

  <!-- Main Form Container -->
  <div class="max-w-4xl mx-auto px-4 pb-24 mt-6">
    <div class="bg-white/90 dark:bg-gray-800/90 backdrop-blur-sm rounded-3xl shadow-xl border border-rose-100 dark:border-gray-700 overflow-hidden">

      <!-- Header -->
      <div class="px-6 py-8 sm:px-8 border-b border-gray-200 dark:border-gray-700">
        <div>
          <h1 class="heading-page text-gray-800 dark:text-gray-100"><%= t('profile.edit.title') %></h1>
          <p class="mt-2 text-body text-gray-600 dark:text-gray-400"><%= t('profile.edit.subtitle') %></p>
        </div>
      </div>

      <%= form_for(resource, as: resource_name, url: registration_path(resource_name), html: { method: :put, id: "profile-form", data: { controller: "form-tracker cover-image-upload" } }) do |f| %>
        <%= render "devise/shared/error_messages", resource: resource %>

        <!-- Hidden cover image input -->
        <%= f.file_field :cover_image, accept: "image/*", class: "hidden",
            data: {
              "cover-image-upload-target" => "input",
              action: "change->cover-image-upload#previewImage"
            } %>

        <!-- Section 1: Personal Information (Expanded by default) -->
        <div class="border-b border-gray-200 dark:border-gray-700" id="personal-section">
          <button type="button"
                  class="section-button w-full px-6 py-4 flex items-center justify-between transition-colors duration-200"
                  onclick="toggleSection('personal-section')">
            <div class="flex items-center gap-3">
              <svg class="w-5 h-5 text-rose-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path>
              </svg>
              <div class="text-left">
                <h3 class="heading-sub text-gray-800 dark:text-gray-200"><%= t('profile.edit.personal_information') %></h3>
                <p class="text-sm text-gray-500 dark:text-gray-400">
                  <%
                personal_completed = [resource.name.present?, resource.email.present?, resource.date_of_birth.present?, resource.preferred_locale.present?, resource.profile_avatar_url.present?].count(true)
              %>
                  <%= t('profile.edit.fields_count', default: '%{completed} of %{total} fields completed', completed: personal_completed, total: 5) %>
                </p>
              </div>
            </div>
            <svg class="w-5 h-5 text-gray-500 transition-transform section-icon" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
            </svg>
          </button>

          <div class="px-6 pb-6 section-content expanded">
            <!-- Avatar Upload Section -->
            <div class="flex items-center gap-6 mb-6" data-controller="avatar-upload">
              <div class="relative">
                <% if current_user.profile_avatar_url.present? %>
                  <img src="<%= current_user.profile_avatar_url %>" alt="<%= t('profile.edit.profile_photo') %>" class="w-24 h-24 rounded-full border-4 border-rose-200 dark:border-rose-800 object-cover" data-avatar-upload-target="preview">
                <% else %>
                  <div class="w-24 h-24 rounded-full bg-gradient-to-br from-rose-400 to-purple-500 flex items-center justify-center border-4 border-rose-200 dark:border-rose-800" data-avatar-upload-target="preview">
                    <span class="text-3xl font-bold text-white"><%= current_user.display_name.first.upcase %></span>
                  </div>
                <% end %>
                <button type="button" data-action="click->avatar-upload#openCamera" class="absolute bottom-0 right-0 bg-rose-500 rounded-full p-2 cursor-pointer hover:bg-rose-600 transition focus:outline-none focus:ring-2 focus:ring-rose-500 focus:ring-offset-2">
                  <svg class="w-4 h-4 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15.232 5.232l3.536 3.536m-2.036-5.036a2.5 2.5 0 113.536 3.536L6.5 21.036H3v-3.572L16.732 3.732z"></path>
                  </svg>
                </button>
                <input type="file" accept="image/*" class="hidden" data-avatar-upload-target="input" data-action="change->avatar-upload#previewImage">
              </div>
              <div>
                <h4 class="font-medium text-gray-800 dark:text-gray-200"><%= t('profile.edit.profile_photo', default: 'Profile Photo') %></h4>
                <p class="text-sm text-gray-500 dark:text-gray-400">
                  <% if current_user.provider == 'google_oauth2' %>
                    <%= t('profile.edit.avatar.google_source') %>
                  <% else %>
                    <%= t('profile.edit.avatar.click_to_change') %>
                  <% end %>
                </p>
              </div>
            </div>

            <div class="grid gap-6 sm:grid-cols-2">
              <!-- Name Field with validation -->
              <div data-controller="field-validator">
                <%= f.label :name, class: "block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2" %>
                <div class="relative">
                  <%= f.text_field :name,
                      class: "w-full pl-10 pr-10 py-3 border-2 border-gray-200 dark:border-gray-600 dark:bg-gray-700 dark:text-gray-100 rounded-xl focus:outline-none focus:ring-2 focus:ring-rose-500 transition",
                      data: {
                        field_validator_target: "input",
                        action: "input->field-validator#validate input->form-tracker#showSaveBar"
                      } %>
                  <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                    <svg class="w-5 h-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path>
                    </svg>
                  </div>
                  <!-- Validation checkmark -->
                  <div class="absolute inset-y-0 right-0 pr-3 flex items-center hidden" data-field-validator-target="valid">
                    <svg class="w-5 h-5 text-green-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                    </svg>
                  </div>
                </div>
              </div>

              <!-- Email Field -->
              <div>
                <%= f.label :email, class: "block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2" %>
                <div class="relative">
                  <%= f.email_field :email,
                      class: "w-full pl-10 pr-3 py-3 border-2 border-gray-200 dark:border-gray-600 dark:bg-gray-700 dark:text-gray-100 rounded-xl focus:outline-none focus:ring-2 focus:ring-rose-500 transition",
                      data: { action: "input->form-tracker#showSaveBar" } %>
                  <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                    <svg class="w-5 h-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 8l7.89 4.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"></path>
                    </svg>
                  </div>
                </div>
                <% if devise_mapping.confirmable? && resource.pending_reconfirmation? %>
                  <p class="mt-2 text-sm text-amber-600 dark:text-amber-400"><%= t('profile.edit.email_pending_confirmation', email: resource.unconfirmed_email) %></p>
                <% end %>
              </div>

              <!-- Birthday Field -->
              <div>
                <%= f.label :date_of_birth, t('profile.edit.form.birthday'), class: "block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2" %>
                <%= f.date_field :date_of_birth,
                    class: "w-full px-4 py-3 border-2 border-gray-200 dark:border-gray-600 dark:bg-gray-700 dark:text-gray-100 rounded-xl focus:outline-none focus:ring-2 focus:ring-rose-500 transition",
                    data: { action: "change->form-tracker#showSaveBar" } %>
                <p class="mt-1 text-xs text-gray-500 dark:text-gray-400">📅 <%= t('profile.edit.form.birthday_help') %></p>
              </div>

              <!-- Language -->
              <div>
                <%= f.label :preferred_locale, t('profile.edit.form.preferred_language'), class: "block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2" %>
                <%= f.select :preferred_locale, options_for_select([
                  ['🇺🇸 English', 'en'],
                  ['🇧🇷 Português', 'pt-BR']
                ], f.object.preferred_locale || I18n.default_locale.to_s),
                {},
                { class: "w-full px-4 py-3 border-2 border-gray-200 dark:border-gray-600 dark:bg-gray-700 dark:text-gray-100 rounded-xl focus:outline-none focus:ring-2 focus:ring-rose-500 transition",
                  data: { action: "change->form-tracker#showSaveBar" } } %>
              </div>
            </div>
          </div>
        </div>

        <!-- Section 2: Bio & Social Media -->
        <div class="border-b border-gray-200 dark:border-gray-700" id="social-section">
          <button type="button"
                  class="section-button w-full px-6 py-4 flex items-center justify-between transition-colors duration-200"
                  onclick="toggleSection('social-section')">
            <div class="flex items-center gap-3">
              <svg class="w-5 h-5 text-rose-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 10V3L4 14h7v7l9-11h-7z"></path>
              </svg>
              <div class="text-left">
                <h3 class="heading-sub text-gray-800 dark:text-gray-200"><%= t('profile.edit.bio_social_title', default: 'Bio & Social Media') %></h3>
                <p class="text-sm text-gray-500 dark:text-gray-400">
                  <%
                    social_count = [resource.instagram_username, resource.twitter_username, resource.tiktok_username,
                                   resource.youtube_url].compact.reject(&:blank?).count
                  %>
                  <% if social_count > 0 %>
                    <%= social_count %> <%= t('profile.edit.platforms_connected', default: 'platforms connected') %>
                  <% else %>
                    <%= t('profile.edit.not_configured', default: 'Not configured') %> • <%= t('profile.edit.optional', default: 'Optional') %>
                  <% end %>
                </p>
              </div>
            </div>
            <svg class="w-5 h-5 text-gray-500 transition-transform rotate-180 section-icon" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
            </svg>
          </button>

          <div class="px-6 pb-6 section-content collapsed">
            <!-- Bio with character counter -->
            <div class="mb-6">
              <%= f.label :bio, t('profile.edit.bio_label', default: 'Bio'), class: "block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2" %>
              <div class="relative" data-controller="character-counter" data-character-counter-max-value="500">
                <%= f.text_area :bio, rows: 4, maxlength: 500,
                    class: "w-full px-4 py-3 pb-8 border-2 border-gray-200 dark:border-gray-600 dark:bg-gray-700 dark:text-gray-100 rounded-xl focus:outline-none focus:ring-2 focus:ring-rose-500 transition resize-none",
                    placeholder: t('profile.edit.bio_placeholder', default: 'Tell us about yourself...'),
                    data: {
                      action: "input->character-counter#updateCount input->form-tracker#showSaveBar",
                      character_counter_target: "input"
                    } %>
                <div class="absolute bottom-2 right-3 text-xs text-gray-500 dark:text-gray-400">
                  <span data-character-counter-target="count"><%= resource.bio&.length || 0 %></span>/500
                </div>
              </div>
            </div>

            <!-- Social Media Grid -->
            <div class="space-y-3">
              <% [
                { field: :instagram_username, icon: '📷', label: t('profile.edit.social.instagram', default: 'Instagram'), placeholder: '@username' },
                { field: :twitter_username, icon: '🐦', label: t('profile.edit.social.twitter', default: 'Twitter/X'), placeholder: '@username' },
                { field: :tiktok_username, icon: '🎵', label: t('profile.edit.social.tiktok', default: 'TikTok'), placeholder: '@username' },
                { field: :youtube_url, icon: '📺', label: t('profile.edit.social.youtube', default: 'YouTube'), placeholder: 'youtube.com/@username' }
              ].each do |social| %>
                <div class="flex items-center gap-3 p-3 bg-gray-50 dark:bg-gray-700/50 rounded-lg">
                  <span class="text-2xl"><%= social[:icon] %></span>
                  <div class="flex-1">
                    <p class="font-medium text-gray-800 dark:text-gray-200 text-sm mb-1"><%= social[:label] %></p>
                    <%= f.text_field social[:field],
                        class: "w-full px-3 py-2 border border-gray-200 dark:border-gray-600 dark:bg-gray-700 dark:text-gray-100 rounded-lg focus:outline-none focus:ring-2 focus:ring-rose-500 text-sm",
                        placeholder: social[:placeholder],
                        data: { action: "input->form-tracker#showSaveBar" } %>
                  </div>
                </div>
              <% end %>
            </div>
          </div>
        </div>

        <!-- Section 3: Address Information -->
        <div class="border-b border-gray-200 dark:border-gray-700" id="address-section">
          <button type="button"
                  class="section-button w-full px-6 py-4 flex items-center justify-between transition-colors duration-200"
                  onclick="toggleSection('address-section')">
            <div class="flex items-center gap-3">
              <svg class="w-5 h-5 text-rose-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z"></path>
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z"></path>
              </svg>
              <div class="text-left">
                <h3 class="heading-sub text-gray-800 dark:text-gray-200"><%= t('profile.edit.address.title') %></h3>
                <p class="text-sm text-gray-500 dark:text-gray-400">
                  <% if resource.street_address.present? || resource.city.present? %>
                    <%= t('profile.edit.configured', default: 'Configured') %>
                  <% else %>
                    <%= t('profile.edit.not_configured', default: 'Not configured') %> • <%= t('profile.edit.optional', default: 'Optional') %>
                  <% end %>
                </p>
              </div>
            </div>
            <svg class="w-5 h-5 text-gray-500 transition-transform rotate-180 section-icon" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
            </svg>
          </button>

          <div class="px-6 pb-6 section-content collapsed">
            <!-- Address validation errors -->
            <div id="address-errors" class="hidden bg-red-50 dark:bg-red-900/20 border border-red-200 dark:border-red-800 rounded-xl p-4 mb-4">
              <div class="flex items-center gap-2 mb-2">
                <svg class="w-5 h-5 text-red-600 dark:text-red-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                </svg>
                <h4 class="text-sm font-semibold text-red-800 dark:text-red-300"><%= t('profile.edit.address.validation_errors', default: 'Address Information Required') %></h4>
              </div>
              <ul id="address-error-list" class="text-sm text-red-700 dark:text-red-400 space-y-1"></ul>
            </div>

            <div class="bg-blue-50 dark:bg-blue-900/20 border border-blue-200 dark:border-blue-800 rounded-xl p-4 mb-4">
              <p class="text-sm text-blue-800 dark:text-blue-300">
                <%= t('profile.edit.address.description') %>
              </p>
            </div>

            <!-- Address fields -->
            <div class="space-y-4" data-controller="postal-code-lookup">
              <div class="grid gap-4 sm:grid-cols-2">
                <!-- Postal Code First (for API lookup) -->
                <div>
                  <%= f.label :postal_code, t('profile.edit.address.postal_code'), class: "block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2" %>
                  <div class="flex gap-2">
                    <%= f.text_field :postal_code,
                        class: "flex-1 px-4 py-3 border-2 border-gray-200 dark:border-gray-600 dark:bg-gray-700 dark:text-gray-100 rounded-xl focus:outline-none focus:ring-2 focus:ring-rose-500 transition",
                        placeholder: t('profile.edit.address.postal_code_placeholder', default: '12345 or 12345-6789'),
                        pattern: "[0-9]{5}-?[0-9]{0,4}",
                        data: {
                          action: "input->form-tracker#showSaveBar input->postal-code-lookup#validateAndLookup",
                          postal_code_lookup_target: "input"
                        } %>
                    <div class="flex items-center" data-postal-code-lookup-target="loading" style="display: none;">
                      <svg class="animate-spin h-5 w-5 text-rose-500" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                        <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                        <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                      </svg>
                    </div>
                  </div>
                  <p class="mt-1 text-xs text-gray-500 dark:text-gray-400"><%= t('profile.edit.address.postal_code_help', default: 'Enter CEP/ZIP code for automatic address lookup') %></p>
                  <div data-postal-code-lookup-target="error" class="mt-1 text-xs text-red-500 dark:text-red-400" style="display: none;"></div>
                </div>

                <div>
                  <%= f.label :country, t('profile.edit.address.country'), class: "block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2" %>
                  <%= f.select :country, options_for_select([
                    ['🇺🇸 United States', 'US'],
                    ['🇧🇷 Brazil', 'BR'],
                    ['🇨🇦 Canada', 'CA'],
                    ['🇬🇧 United Kingdom', 'GB'],
                    ['🇩🇪 Germany', 'DE'],
                    ['🇫🇷 France', 'FR']
                  ], f.object.country),
                  { include_blank: t('profile.edit.address.select_country') },
                  { class: "w-full px-4 py-3 border-2 border-gray-200 dark:border-gray-600 dark:bg-gray-700 dark:text-gray-100 rounded-xl focus:outline-none focus:ring-2 focus:ring-rose-500 transition",
                    data: {
                      action: "change->form-tracker#showSaveBar",
                      postal_code_lookup_target: "country"
                    } } %>
                </div>

                <div>
                  <%= f.label :street_number, t('profile.edit.address.street_number'), class: "block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2" %>
                  <%= f.text_field :street_number,
                      class: "w-full px-4 py-3 border-2 border-gray-200 dark:border-gray-600 dark:bg-gray-700 dark:text-gray-100 rounded-xl focus:outline-none focus:ring-2 focus:ring-rose-500 transition",
                      placeholder: t('profile.edit.address.street_number_placeholder', default: '123, 456'),
                      data: { action: "input->form-tracker#showSaveBar" } %>
                </div>

                <div>
                  <%= f.label :street_address, t('profile.edit.address.street_address'), class: "block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2" %>
                  <%= f.text_field :street_address,
                      class: "w-full px-4 py-3 border-2 border-gray-200 dark:border-gray-600 dark:bg-gray-700 dark:text-gray-100 rounded-xl focus:outline-none focus:ring-2 focus:ring-rose-500 transition",
                      placeholder: t('profile.edit.address.street_address_placeholder', default: 'Main Street, Oak Avenue'),
                      data: {
                        action: "input->form-tracker#showSaveBar",
                        postal_code_lookup_target: "street"
                      } %>
                </div>

                <div>
                  <%= f.label :apartment_unit, t('profile.edit.address.apartment_unit', default: 'Apartment/Unit'), class: "block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2" %>
                  <%= f.text_field :apartment_unit,
                      class: "w-full px-4 py-3 border-2 border-gray-200 dark:border-gray-600 dark:bg-gray-700 dark:text-gray-100 rounded-xl focus:outline-none focus:ring-2 focus:ring-rose-500 transition",
                      placeholder: t('profile.edit.address.apartment_unit_placeholder', default: 'Apt 4B, Suite 101'),
                      data: { action: "input->form-tracker#showSaveBar" } %>
                </div>

                <div>
                  <%= f.label :city, t('profile.edit.address.city'), class: "block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2" %>
                  <%= f.text_field :city,
                      class: "w-full px-4 py-3 border-2 border-gray-200 dark:border-gray-600 dark:bg-gray-700 dark:text-gray-100 rounded-xl focus:outline-none focus:ring-2 focus:ring-rose-500 transition",
                      placeholder: t('profile.edit.address.city_placeholder', default: 'New York'),
                      data: {
                        action: "input->form-tracker#showSaveBar",
                        postal_code_lookup_target: "city"
                      } %>
                </div>

                <div>
                  <%= f.label :state, t('profile.edit.address.state'), class: "block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2" %>
                  <%= f.text_field :state,
                      class: "w-full px-4 py-3 border-2 border-gray-200 dark:border-gray-600 dark:bg-gray-700 dark:text-gray-100 rounded-xl focus:outline-none focus:ring-2 focus:ring-rose-500 transition",
                      placeholder: t('profile.edit.address.state_placeholder', default: 'NY'),
                      data: {
                        action: "input->form-tracker#showSaveBar",
                        postal_code_lookup_target: "state"
                      } %>
                </div>
              </div>
            </div>
          </div>
        </div>

        <!-- Section 4: Security -->
        <div class="border-b border-gray-200 dark:border-gray-700" id="security-section">
          <button type="button"
                  class="section-button w-full px-6 py-4 flex items-center justify-between transition-colors duration-200"
                  onclick="toggleSection('security-section')">
            <div class="flex items-center gap-3">
              <svg class="w-5 h-5 text-rose-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z"></path>
              </svg>
              <div class="text-left">
                <h3 class="heading-sub text-gray-800 dark:text-gray-200"><%= t('profile.edit.security_title', default: 'Security') %></h3>
                <p class="text-sm text-gray-500 dark:text-gray-400">
                  <%= t('profile.edit.password_requirements', default: 'Password requirements and account security') %>
                </p>
              </div>
            </div>
            <svg class="w-5 h-5 text-gray-500 transition-transform rotate-180 section-icon" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
            </svg>
          </button>

          <div class="px-6 pb-6 section-content collapsed" data-controller="password-section">
            <!-- Password Requirements Box -->
            <div class="bg-blue-50 dark:bg-blue-900/20 border border-blue-200 dark:border-blue-800 rounded-xl p-4 mb-4">
              <h4 class="text-sm font-semibold text-blue-800 dark:text-blue-300 mb-2"><%= t('profile.edit.password_requirements_title', default: 'Password Requirements:') %></h4>
              <ul class="text-xs text-blue-700 dark:text-blue-400 space-y-1">
                <li class="flex items-center gap-1">
                  <span data-password-section-target="lengthCheck" class="text-gray-400">✓</span>
                  <%= t('profile.edit.password_min_length', default: 'At least 8 characters') %>
                </li>
                <li class="flex items-center gap-1">
                  <span data-password-section-target="numberCheck" class="text-gray-400">✓</span>
                  <%= t('profile.edit.password_needs_number', default: 'Include at least one number') %>
                </li>
                <li class="flex items-center gap-1">
                  <span data-password-section-target="symbolCheck" class="text-gray-400">✓</span>
                  <%= t('profile.edit.password_needs_symbol', default: 'Include at least one special character (!@#$%^&*)') %>
                </li>
                <li class="flex items-center gap-1">
                  <span data-password-section-target="caseCheck" class="text-gray-400">✓</span>
                  <%= t('profile.edit.password_needs_case', default: 'Include uppercase and lowercase letters') %>
                </li>
              </ul>
            </div>

            <!-- Password fields -->
            <div class="space-y-4">
              <!-- Current password field -->
              <div>
                <%= f.label :current_password, t('profile.edit.current_password_label', default: 'Current Password'), class: "block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2" %>
                <%= f.password_field :current_password,
                    class: "w-full px-4 py-3 border-2 border-gray-200 dark:border-gray-600 dark:bg-gray-700 dark:text-gray-100 rounded-xl focus:outline-none focus:ring-2 focus:ring-rose-500 transition",
                    placeholder: t('profile.edit.current_password_placeholder', default: 'Enter your current password'),
                    data: { action: "input->form-tracker#showSaveBar" } %>
                <% if current_user.oauth_only? %>
                  <p class="mt-1 text-xs text-gray-500 dark:text-gray-400">
                    <%= t('profile.edit.oauth_no_password', default: 'You signed up with Google. Leave blank to keep using Google sign-in only.') %>
                  </p>
                <% end %>
              </div>

              <!-- New password field with strength indicator -->
              <div data-controller="password-strength">
                <%= f.label :password, t('profile.edit.new_password_label', default: 'New Password'), class: "block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2" %>
                <%= f.password_field :password,
                    class: "w-full px-4 py-3 border-2 border-gray-200 dark:border-gray-600 dark:bg-gray-700 dark:text-gray-100 rounded-xl focus:outline-none focus:ring-2 focus:ring-rose-500 transition",
                    placeholder: t('profile.edit.new_password_placeholder', default: 'Enter a new password'),
                    data: {
                      password_strength_target: "input",
                      action: "input->password-strength#check input->password-section#checkRequirements input->form-tracker#showSaveBar"
                    } %>
                <!-- Password strength indicator -->
                <div class="mt-2">
                  <div class="flex justify-between mb-1">
                    <span class="text-xs text-gray-500 dark:text-gray-400"><%= t('profile.edit.password_strength', default: 'Strength') %></span>
                    <span class="text-xs font-medium" data-password-strength-target="label"></span>
                  </div>
                  <div class="flex gap-1" data-password-strength-target="indicator">
                    <div class="h-1 flex-1 bg-gray-200 dark:bg-gray-600 rounded-full"></div>
                    <div class="h-1 flex-1 bg-gray-200 dark:bg-gray-600 rounded-full"></div>
                    <div class="h-1 flex-1 bg-gray-200 dark:bg-gray-600 rounded-full"></div>
                    <div class="h-1 flex-1 bg-gray-200 dark:bg-gray-600 rounded-full"></div>
                  </div>
                </div>
              </div>

              <!-- Confirm password field -->
              <div>
                <%= f.label :password_confirmation, t('profile.edit.confirm_password_label', default: 'Confirm New Password'), class: "block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2" %>
                <%= f.password_field :password_confirmation,
                    class: "w-full px-4 py-3 border-2 border-gray-200 dark:border-gray-600 dark:bg-gray-700 dark:text-gray-100 rounded-xl focus:outline-none focus:ring-2 focus:ring-rose-500 transition",
                    placeholder: t('profile.edit.confirm_password_placeholder', default: 'Re-enter your new password'),
                    data: { action: "input->form-tracker#showSaveBar" } %>
              </div>
            </div>
          </div>
        </div>

        <!-- Section 5: Account Settings -->
        <div class="border-b border-gray-200 dark:border-gray-700" id="account-section">
          <button type="button"
                  class="section-button w-full px-6 py-4 flex items-center justify-between transition-colors duration-200"
                  onclick="toggleSection('account-section')">
            <div class="flex items-center gap-3">
              <svg class="w-5 h-5 text-rose-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z"></path>
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>
              </svg>
              <div class="text-left">
                <h3 class="heading-sub text-gray-800 dark:text-gray-200"><%= t('profile.edit.account_settings', default: 'Account Settings') %></h3>
                <p class="text-sm text-gray-500 dark:text-gray-400">
                  <%= t('profile.edit.integrations_and_danger', default: 'Third-party integrations & account management') %>
                </p>
              </div>
            </div>
            <svg class="w-5 h-5 text-gray-500 transition-transform rotate-180 section-icon" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
            </svg>
          </button>

          <div class="px-6 pb-6 section-content collapsed">
            <!-- Third Party Integrations -->
            <div class="mb-6">
              <h4 class="text-sm font-semibold text-gray-800 dark:text-gray-200 mb-3">
                <%= t('profile.edit.third_party_integrations', default: 'Third-Party Integrations') %>
              </h4>
              <div class="space-y-3">
                <% if current_user.provider == 'google_oauth2' %>
                  <div class="flex items-center justify-between p-4 bg-green-50 dark:bg-green-900/20 border border-green-200 dark:border-green-800 rounded-xl">
                    <div class="flex items-center gap-3">
                      <svg class="w-8 h-8" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                        <path d="M22.56 12.25c0-.78-.07-1.53-.2-2.25H12v4.26h5.92c-.26 1.37-1.04 2.53-2.21 3.31v2.77h3.57c2.08-1.92 3.28-4.74 3.28-8.09z" fill="#4285F4"/>
                        <path d="M12 23c2.97 0 5.46-.98 7.28-2.66l-3.57-2.77c-.98.66-2.23 1.06-3.71 1.06-2.86 0-5.29-1.93-6.16-4.53H2.18v2.84C3.99 20.53 7.7 23 12 23z" fill="#34A853"/>
                        <path d="M5.84 14.09c-.22-.66-.35-1.36-.35-2.09s.13-1.43.35-2.09V7.07H2.18C1.43 8.55 1 10.22 1 12s.43 3.45 1.18 4.93l2.85-2.22.81-.62z" fill="#FBBC05"/>
                        <path d="M12 5.38c1.62 0 3.06.56 4.21 1.64l3.15-3.15C17.45 2.09 14.97 1 12 1 7.7 1 3.99 3.47 2.18 7.07l3.66 2.84c.87-2.6 3.3-4.53 6.16-4.53z" fill="#EA4335"/>
                      </svg>
                      <div>
                        <p class="font-medium text-gray-800 dark:text-gray-200"><%= t('profile.edit.google_connected', default: 'Google Account') %></p>
                        <p class="text-xs text-gray-600 dark:text-gray-400"><%= current_user.email %></p>
                      </div>
                    </div>
                    <span class="text-xs px-2 py-1 bg-green-600 text-white rounded-full">
                      <%= t('profile.edit.connected', default: 'Connected') %>
                    </span>
                  </div>
                <% else %>
                  <div class="flex items-center justify-between p-4 bg-gray-50 dark:bg-gray-700/50 border border-gray-200 dark:border-gray-600 rounded-xl">
                    <div class="flex items-center gap-3">
                      <svg class="w-8 h-8" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                        <path d="M22.56 12.25c0-.78-.07-1.53-.2-2.25H12v4.26h5.92c-.26 1.37-1.04 2.53-2.21 3.31v2.77h3.57c2.08-1.92 3.28-4.74 3.28-8.09z" fill="#4285F4"/>
                        <path d="M12 23c2.97 0 5.46-.98 7.28-2.66l-3.57-2.77c-.98.66-2.23 1.06-3.71 1.06-2.86 0-5.29-1.93-6.16-4.53H2.18v2.84C3.99 20.53 7.7 23 12 23z" fill="#34A853"/>
                        <path d="M5.84 14.09c-.22-.66-.35-1.36-.35-2.09s.13-1.43.35-2.09V7.07H2.18C1.43 8.55 1 10.22 1 12s.43 3.45 1.18 4.93l2.85-2.22.81-.62z" fill="#FBBC05"/>
                        <path d="M12 5.38c1.62 0 3.06.56 4.21 1.64l3.15-3.15C17.45 2.09 14.97 1 12 1 7.7 1 3.99 3.47 2.18 7.07l3.66 2.84c.87-2.6 3.3-4.53 6.16-4.53z" fill="#EA4335"/>
                      </svg>
                      <div>
                        <p class="font-medium text-gray-800 dark:text-gray-200"><%= t('profile.edit.connect_google', default: 'Connect Google Account') %></p>
                        <p class="text-xs text-gray-600 dark:text-gray-400"><%= t('profile.edit.google_benefits', default: 'Sign in with one click') %></p>
                      </div>
                    </div>
                    <%= link_to t('profile.edit.connect_button', default: 'Connect'), user_google_oauth2_omniauth_authorize_path, method: :post, class: "text-xs px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition" %>
                  </div>
                <% end %>
              </div>
            </div>

            <!-- Danger Zone -->
            <div class="border-t border-gray-200 dark:border-gray-700 pt-6">
              <h4 class="text-sm font-semibold text-red-600 dark:text-red-400 mb-3">
                <%= t('profile.edit.danger_zone', default: 'Danger Zone') %>
              </h4>
              <div class="p-4 bg-red-50 dark:bg-red-900/20 border-2 border-red-200 dark:border-red-800 rounded-xl">
                <h5 class="font-medium text-red-800 dark:text-red-300 mb-1">
                  <%= t('profile.edit.delete_account_title', default: 'Delete Account') %>
                </h5>
                <p class="text-sm text-red-700 dark:text-red-400 mb-3">
                  <%= t('profile.edit.delete_account_warning', default: 'Once you delete your account, there is no going back. All your data will be permanently removed.') %>
                </p>
                <%= link_to t('profile.edit.delete_account_button', default: 'Delete My Account'),
                    registration_path(resource_name),
                    data: {
                      confirm: t('profile.edit.delete_account_confirm', default: "Are you absolutely sure? This will permanently delete your account and all your wishlists. Type 'DELETE' to confirm."),
                      turbo_method: :delete
                    },
                    class: "inline-block px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700 transition font-medium text-sm" %>
              </div>
            </div>
          </div>
        </div>

      <% end %>
    </div>
  </div>

  <!-- Floating Save Bar (Hidden by default, shown when form changes) -->
  <div id="save-bar"
       class="hidden fixed bottom-20 sm:bottom-6 left-1/2 transform -translate-x-1/2 bg-white dark:bg-gray-800 shadow-xl rounded-full px-4 sm:px-6 py-3 flex items-center gap-4 border border-gray-200 dark:border-gray-700 z-50"
       data-form-tracker-target="saveBar">
    <span class="text-sm text-gray-600 dark:text-gray-400"><%= t('profile.edit.unsaved_changes', default: 'Unsaved changes') %></span>
    <button type="submit" form="profile-form"
            class="bg-gradient-to-r from-rose-500 to-rose-600 text-white px-6 py-2 rounded-full hover:from-rose-600 hover:to-rose-700 transition font-medium text-sm">
      <%= t('profile.edit.form.save_changes') %>
    </button>
    <button type="button"
            onclick="discardChanges()"
            class="text-gray-500 dark:text-gray-400 hover:text-gray-700 dark:hover:text-gray-300 text-sm">
      <%= t('profile.edit.discard', default: 'Discard') %>
    </button>
  </div>

  <!-- Success Toast (Hidden, shown after save) -->
  <div id="success-toast"
       class="hidden fixed top-6 right-6 bg-green-500 text-white px-6 py-3 rounded-xl shadow-lg flex items-center gap-3">
    <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
    </svg>
    <span><%= t('profile.edit.profile_updated', default: 'Profile updated successfully!') %></span>
    <%= link_to t('profile.edit.view_profile', default: 'View Profile'), user_path(current_user), class: "ml-4 text-green-200 hover:text-white" %>
  </div>
</div>

<script>
// Animated toggle function for sections (only one open at a time)
function toggleSection(sectionId) {
  const section = document.getElementById(sectionId);
  if (!section) return;

  const content = section.querySelector('.section-content');
  const icon = section.querySelector('.section-icon');

  if (content && icon) {
    const isCollapsed = content.classList.contains('collapsed');

    // If clicking on already expanded section, just collapse it
    if (!isCollapsed) {
      content.classList.remove('expanded');
      content.classList.add('collapsed');
      icon.classList.add('rotate-180');
      return;
    }

    // Close all other sections first
    const allSections = ['personal-section', 'social-section', 'address-section', 'security-section', 'account-section'];
    allSections.forEach(otherSectionId => {
      if (otherSectionId !== sectionId) {
        const otherSection = document.getElementById(otherSectionId);
        if (otherSection) {
          const otherContent = otherSection.querySelector('.section-content');
          const otherIcon = otherSection.querySelector('.section-icon');
          if (otherContent && otherIcon) {
            otherContent.classList.remove('expanded');
            otherContent.classList.add('collapsed');
            otherIcon.classList.add('rotate-180');
          }
        }
      }
    });

    // Now expand the clicked section
    content.classList.remove('collapsed');
    content.classList.add('expanded');
    icon.classList.remove('rotate-180');
  }
}

// Initialize page
document.addEventListener('DOMContentLoaded', function() {
  // Personal section starts expanded (already has 'expanded' class)
  // No need to modify it here

  // Form change tracking
  const form = document.getElementById('profile-form');
  const saveBar = document.getElementById('save-bar');
  let formChanged = false;

  if (form && saveBar) {
    form.addEventListener('input', function() {
      if (!formChanged) {
        formChanged = true;
        saveBar.classList.remove('hidden');
      }
    });
    form.addEventListener('change', function() {
      if (!formChanged) {
        formChanged = true;
        saveBar.classList.remove('hidden');
      }
    });
  }

  // Character counter for bio
  const bioInput = document.querySelector('textarea[name*="bio"]');
  const bioCounter = document.querySelector('[data-character-counter-target="count"]');
  if (bioInput && bioCounter) {
    function updateBioCount() {
      bioCounter.textContent = bioInput.value.length;
    }
    bioInput.addEventListener('input', updateBioCount);
    updateBioCount();
  }

  // Password strength indicator
  const passwordInput = document.querySelector('input[name*="password"][type="password"]:not([name*="confirmation"]):not([name*="current"])');
  const strengthBars = document.querySelectorAll('[data-password-strength-target="indicator"] div');
  const currentPasswordDiv = document.querySelector('[data-password-section-target="currentPassword"]');

  if (passwordInput && strengthBars.length > 0) {
    passwordInput.addEventListener('input', function() {
      const password = this.value;
      let strength = 0;

      if (password.length >= 8) strength++;
      if (password.match(/[a-z]/) && password.match(/[A-Z]/)) strength++;
      if (password.match(/[0-9]/)) strength++;
      if (password.match(/[^a-zA-Z0-9]/)) strength++;

      strengthBars.forEach((bar, index) => {
        bar.classList.remove('bg-red-500', 'bg-yellow-500', 'bg-blue-500', 'bg-green-500');
        if (index < strength) {
          bar.classList.remove('bg-gray-200', 'dark:bg-gray-600');
          if (strength === 1) bar.classList.add('bg-red-500');
          else if (strength === 2) bar.classList.add('bg-yellow-500');
          else if (strength === 3) bar.classList.add('bg-blue-500');
          else if (strength === 4) bar.classList.add('bg-green-500');
        } else {
          bar.classList.add('bg-gray-200', 'dark:bg-gray-600');
        }
      });

      // Show current password field when needed
      if (currentPasswordDiv && password.length > 0) {
        currentPasswordDiv.classList.remove('hidden');
      }
    });
  }

  // Name field validation
  const nameInput = document.querySelector('input[name*="name"]');
  const nameValidIcon = document.querySelector('[data-field-validator-target="valid"]');
  if (nameInput && nameValidIcon) {
    function checkName() {
      if (nameInput.value.length > 2) {
        nameValidIcon.classList.remove('hidden');
      } else {
        nameValidIcon.classList.add('hidden');
      }
    }
    nameInput.addEventListener('input', checkName);
    checkName();
  }

  // Avatar upload
  const avatarButton = document.querySelector('button[data-action*="avatar-upload#openCamera"]');
  const avatarInput = document.querySelector('input[data-avatar-upload-target="input"]');
  const avatarPreview = document.querySelector('[data-avatar-upload-target="preview"]');

  if (avatarButton && avatarInput && avatarPreview) {
    avatarButton.addEventListener('click', function() {
      avatarInput.click();
    });

    avatarInput.addEventListener('change', function(event) {
      const file = event.target.files[0];
      if (file) {
        const reader = new FileReader();
        reader.onload = (e) => {
          if (avatarPreview.tagName === 'IMG') {
            avatarPreview.src = e.target.result;
          } else {
            const img = document.createElement('img');
            img.src = e.target.result;
            img.className = 'w-24 h-24 rounded-full border-4 border-rose-200 dark:border-rose-800 object-cover';
            img.setAttribute('data-avatar-upload-target', 'preview');
            avatarPreview.replaceWith(img);
          }
        };
        reader.readAsDataURL(file);
      }
    });
  }

  // Postal code input validation with unsaved changes logic
  const postalCodeInput = document.querySelector('input[data-postal-code-lookup-target="input"]');
  if (postalCodeInput) {
    postalCodeInput.addEventListener('input', function() {
      // Remove any non-numeric characters as a fallback
      const numericValue = this.value.replace(/\D/g, '');

      // Format and update value
      let formatted = numericValue;
      if (numericValue.length === 8) {
        // Brazilian CEP format: 12345-678
        formatted = numericValue.replace(/(\d{5})(\d{3})/, '$1-$2');
      } else if (numericValue.length === 9) {
        // US ZIP+4 format: 12345-6789
        formatted = numericValue.replace(/(\d{5})(\d{4})/, '$1-$2');
      }

      if (formatted !== this.value) {
        const cursorPosition = this.selectionStart;
        const lengthDiff = formatted.length - this.value.length;
        this.value = formatted;
        this.setSelectionRange(cursorPosition + lengthDiff, cursorPosition + lengthDiff);
      }

      // Hide save bar if postal code is invalid (simple fix for unsaved changes issue)
      const isValidPostalCode = numericValue.length === 0 || numericValue.length === 5 || numericValue.length === 8;
      if (!isValidPostalCode && saveBar && !saveBar.classList.contains('hidden')) {
        saveBar.classList.add('hidden');
        formChanged = false;
      }
    });
  }


  // Simple contextual error handling for address fields
  <% if resource.errors.any? %>
    const addressFields = ['street_number', 'street_address', 'city', 'state', 'postal_code', 'country'];
    const resourceErrors = <%= resource.errors.to_json.html_safe %>;
    const addressErrors = [];

    // Check if there are any address-related errors
    for (const field of addressFields) {
      if (resourceErrors[field]) {
        addressErrors.push(...resourceErrors[field]);
      }
    }

    // If there are address errors, show them and open the address section
    if (addressErrors.length > 0) {
      const addressErrorContainer = document.getElementById('address-errors');
      const addressErrorList = document.getElementById('address-error-list');

      if (addressErrorContainer && addressErrorList) {
        addressErrorList.innerHTML = '';
        addressErrors.forEach(error => {
          const li = document.createElement('li');
          li.textContent = error;
          addressErrorList.appendChild(li);
        });
        addressErrorContainer.classList.remove('hidden');
      }

      // Open address section if it has errors
      const addressSection = document.getElementById('address-section');
      if (addressSection) {
        const content = addressSection.querySelector('.section-content');
        if (content && content.classList.contains('collapsed')) {
          toggleSection('address-section');
        }
      }
    }
  <% end %>

  // Show success toast if flash message exists
  <% if flash[:notice] %>
    const toast = document.getElementById('success-toast');
    if (toast) {
      toast.classList.remove('hidden');
      setTimeout(() => toast.classList.add('hidden'), 5000);
    }
  <% end %>
});

// Utility functions
function expandAllSections() {
  ['personal-section', 'social-section', 'address-section', 'security-section', 'account-section'].forEach(sectionId => {
    const section = document.getElementById(sectionId);
    if (section) {
      const content = section.querySelector('.section-content');
      const icon = section.querySelector('.section-icon');
      if (content && icon) {
        content.classList.remove('collapsed');
        content.classList.add('expanded');
        icon.classList.remove('rotate-180');
      }
    }
  });
}

function discardChanges() {
  if (confirm('<%= t("profile.edit.discard_confirm", default: "Are you sure you want to discard your changes?") %>')) {
    location.reload();
  }
}
</script>